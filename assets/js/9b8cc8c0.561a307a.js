"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[6469],{930:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/lp_tokens-9f72b5079dda0b8216b21ab0fd660f61.png"},3199:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/lp_eth-3f57dbfef33ecb12cb9c7acdf9e0479b.png"},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=o,y=u["".concat(l,".").concat(h)]||u[h]||d[h]||i;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7248:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(8168),o=(n(6540),n(5680));const i={},a="Create a liquidity Pool on Ethereum based blockchains",s={unversionedId:"Practical Sessions/DeFi/lp_eth",id:"Practical Sessions/DeFi/lp_eth",title:"Create a liquidity Pool on Ethereum based blockchains",description:"In this section you will learn how to mint tokens on EVM based blockchains.",source:"@site/docs/Practical Sessions/DeFi/lp_eth.md",sourceDirName:"Practical Sessions/DeFi",slug:"/Practical Sessions/DeFi/lp_eth",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/DeFi/lp_eth",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Liquidity Pools: Use Cases",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/DeFi/liquidity_pools_use_cases"},next:{title:"Mint tokens on MultiversX",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/DeFi/mint_tokens_mvx"}},l={},c=[],p={toc:c},u="wrapper";function d({components:e,...t}){return(0,o.yg)(u,(0,r.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"create-a-liquidity-pool-on-ethereum-based-blockchains"},"Create a liquidity Pool on Ethereum based blockchains"),(0,o.yg)("p",null,"In this section you will learn how to mint tokens on EVM based blockchains.\nWe will use ",(0,o.yg)("a",{parentName:"p",href:"https://tools.smithii.io/liquidity-pool/arbitrum"},"this")," decentralized applications (dApp)."),(0,o.yg)("p",null,"Let's inspect the Interface:\n",(0,o.yg)("img",{alt:"Metamask",src:n(3199).A,width:"2982",height:"1594"})),(0,o.yg)("p",null,"Observe:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Base Token - this is the token you want to assign a price;"),(0,o.yg)("li",{parentName:"ul"},"Select Quote - based on this token, you will get the quote of your token;"),(0,o.yg)("li",{parentName:"ul"},"Add liquidity - On the left-hand side is how much of your token will be delivered to the pool; On the right-hand side is how much of the second token will be delivered to the pool.")),(0,o.yg)("p",null,"Press ",(0,o.yg)("strong",{parentName:"p"},"Create Liquidity Pool")," and sign the transaction."),(0,o.yg)("p",null,"Let's inspect the transaction. ",(0,o.yg)("a",{parentName:"p",href:"https://arbiscan.io/tx/0x7829c6dfc3c5fa47d9bd1f6a48e26fd3c076cf38d06c92b47a43c90d73e6e059"},"Here")," is my transaction if you want to inspect it on-chain."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Metamask",src:n(8702).A,width:"2982",height:"1472"})),(0,o.yg)("p",null,"Observe: "),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"1,000,000,000 DemoToken and 0.001 ETH were sent from my wallet to the Liquidity Pool smart contract;"),(0,o.yg)("li",{parentName:"ul"},"0.002 ETH was the value of LP creation.")),(0,o.yg)("p",null,"Let's inspect the ",(0,o.yg)("a",{parentName:"p",href:"https://arbiscan.io/address/0x4e64ba62cb8995275c89f8265766e4d90f810c9f#tokentxns"},"newly created smart contract"),":"),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Metamask",src:n(930).A,width:"2982",height:"1472"}),"\nObserve that the smart contract now holds:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"1,000,000,000 DemoToken"),(0,o.yg)("li",{parentName:"ul"},"0.001 ETH")))}d.isMDXComponent=!0},8702:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/eth_tx_lp_creation-7454126092237785641a4bcf9306d6f3.png"}}]);