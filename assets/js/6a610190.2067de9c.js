"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[4853],{740:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/amm-c10f49d70f8d03b426b20c2630c6ed20.png"},3660:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/ash_lp_explorer-8f0291c5ab7278d077912022d221c7f7.png"},3961:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/swap_ash1-0e09e8d822927822845c8f9b1cee6c76.png"},5170:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(8168),r=(a(6540),a(5680));const o={},s="Swap tokens via MetaMask",i={unversionedId:"Practical Sessions/Tokens/media/swap_eth",id:"Practical Sessions/Tokens/media/swap_eth",title:"Swap tokens via MetaMask",description:"In this section, you will learn how to swap a token with another on Ethereum based blockchains. For this, we will use the Metamask, wallet.",source:"@site/docs/Practical Sessions/Tokens/media/swap_eth.md",sourceDirName:"Practical Sessions/Tokens/media",slug:"/Practical Sessions/Tokens/media/swap_eth",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Tokens/media/swap_eth",draft:!1,tags:[],version:"current",frontMatter:{}},l={},c=[{value:"Automated Market Maker (AMM)",id:"automated-market-maker-amm",level:2},{value:"Pair Smart Contract",id:"pair-smart-contract",level:2},{value:"Task",id:"task",level:2}],p={toc:c},m="wrapper";function d({components:e,...t}){return(0,r.yg)(m,(0,n.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"swap-tokens-via-metamask"},"Swap tokens via MetaMask"),(0,r.yg)("p",null,"In this section, you will learn how to swap a token with another on Ethereum based blockchains. For this, we will use the ",(0,r.yg)("a",{parentName:"p",href:"https://portfolio.metamask.io/"},"Metamask"),", wallet."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"DEX",src:a(9828).A,width:"2970",height:"1506"})),(0,r.yg)("p",null,"Use ",(0,r.yg)("strong",{parentName:"p"},"Connect")," button and connect with your wallet via your preferred method."),(0,r.yg)("p",null,"Let's perform a swap from EGLD to ASH."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"SwapASH",src:a(3961).A,width:"2970",height:"1506"}),"\nNotice that for 1 EGLD, we would get ",(0,r.yg)("strong",{parentName:"p"},"212 ASH")," tokens."),(0,r.yg)("p",null,"Let's try to swap more:\n",(0,r.yg)("img",{alt:"SwapASH",src:a(6669).A,width:"2970",height:"1506"})),(0,r.yg)("p",null,"Notice that for 10 EGLD, we would get 1498 ASH tokens.\nThat's ",(0,r.yg)("strong",{parentName:"p"},"149.8 ASH")," tokens for 1 EGLD."),(0,r.yg)("p",null,"Any intuition of why the drop of exchange rate?"),(0,r.yg)("p",null,"Let's try to swap more:\n",(0,r.yg)("img",{alt:"SwapASH",src:a(6420).A,width:"2970",height:"1506"})),(0,r.yg)("p",null,"Notice that for 100 EGLD, we would get 3798 ASH tokens.\nThat's ",(0,r.yg)("strong",{parentName:"p"},"37.98 ASH")," tokens for 1 EGLD."),(0,r.yg)("h2",{id:"automated-market-maker-amm"},"Automated Market Maker (AMM)"),(0,r.yg)("p",null,"An AMM relies on a mathematical formula to price assets.\nInstead of using an order book like a traditional exchange, assets are priced according to a pricing algorithm."),(0,r.yg)("p",null,'This formula can vary with each protocol.\nFor example, xExchange DEX uses the industry standard "x*y=k" constant product AMM model, which has proven its reliability in existing implementations, and has been formally modelled and verified.\nIn this formula, k is a fixed constant, meaning the pool\u2019s total liquidity always has to remain the same.'),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"AMM",src:a(740).A,width:"843",height:"725"})),(0,r.yg)("h2",{id:"pair-smart-contract"},"Pair Smart Contract"),(0,r.yg)("p",null,"The smart contract code can be found ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/multiversx/mx-exchange-sc/tree/main/dex/pair"},"here"),"."),(0,r.yg)("p",null,"Let's inspect the deployed ",(0,r.yg)("a",{parentName:"p",href:"https://devnet-explorer.multiversx.com/accounts/erd1qqqqqqqqqqqqqpgq0e9pmlzr0nk5nkulzcmessttsjkzr4xf0n4sue4r8e/tokens"},"contract"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"AshLPExplorer",src:a(3660).A,width:"2474",height:"1558"})),(0,r.yg)("p",null,"Notice the contract's balance:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"WEGLD: 27.14"),(0,r.yg)("li",{parentName:"ul"},"ASH: 4,817.99"),(0,r.yg)("li",{parentName:"ul"},"ASHWEGLD: 0.000000000000001 - This is the token provided to liquidity providers when they add liquidity. Let's ignore this for now.")),(0,r.yg)("p",null,"Let's try to exchange more ASH than the contract can provide:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"SwapASH",src:a(6635).A,width:"2474",height:"1558"})),(0,r.yg)("p",null,"In this example, we tried to exchange ",(0,r.yg)("strong",{parentName:"p"},"100 millions EGLD"),", but the contract would output ",(0,r.yg)("strong",{parentName:"p"},"4,580.0391 ASH")," tokens.\nThat's because of the curve of ",(0,r.yg)("strong",{parentName:"p"},"x*y=k")," formula (see image above)."),(0,r.yg)("h2",{id:"task"},"Task"),(0,r.yg)("p",null,"Perform a swap. Go to the ",(0,r.yg)("a",{parentName:"p",href:"https://devnet-explorer.multiversx.com"},"Explorer")," and inspect your transaction.\nInspect if there are any evets emitted."))}d.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>g});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(a),u=r,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(g,s(s({ref:t},p),{},{components:a})):n.createElement(g,s({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6420:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/swap_ash3-94fea4692b8d5a5d26f1e58bf0829c81.png"},6635:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/swap_ash4-ce14f215a5188e8f62cf85268ba9cc19.png"},6669:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/swap_ash2-9fd3572d919b1e2aa996d973c655ee6e.png"},9828:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/xexchange-5d55e7e44bdd6bf02630b1589689334d.png"}}]);